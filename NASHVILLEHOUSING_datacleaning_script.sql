/*
CLEANING DATA IN SQL QUERIES
*/

SELECT * FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

-- STANDARDIZE DATE FORMAT
SELECT SALEDATECONVERTED, CONVERT(DATE, SALEDATE) FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

UPDATE NASHVILLEHOUSING SET SALEDATE = CONVERT(DATE, SALEDATE)

-- IF IT DOESN'T UPDATE PROPERLY

ALTER TABLE NASHVILLEHOUSING ADD SALEDATECONVERTED DATE;

UPDATE NASHVILLEHOUSING SET SALEDATECONVERTED = CONVERT(DATE, SALEDATE)

-- POPULATE PROPERTY ADDRESS DATA

SELECT * FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING
--WHERE PROPERTYADDRESS IS NULL
ORDER BY PARCELID

SELECT A.PARCELID,
       A.PROPERTYADDRESS,
       B.PARCELID,
       B.PROPERTYADDRESS,
       ISNULL(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING A
    JOIN PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING B
    ON A.PARCELID = B.PARCELID
    AND A.[UNIQUEID ] <> B.[UNIQUEID ]
WHERE A.PROPERTYADDRESS IS NULL

UPDATE A
SET PROPERTYADDRESS = ISNULL(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING A
    JOIN PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING B
    ON A.PARCELID = B.PARCELID
    AND A.[UNIQUEID ] <> B.[UNIQUEID ]
WHERE A.PROPERTYADDRESS IS NULL

-- BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (ADDRESS, CITY, STATE)

SELECT PROPERTYADDRESS FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING
--WHERE PROPERTYADDRESS IS NULL
--ORDER BY PARCELID

SELECT SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',', PROPERTYADDRESS) - 1) AS ADDRESS,
       SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS) + 1, LEN(PROPERTYADDRESS)) AS ADDRESS
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

ALTER TABLE NASHVILLEHOUSING ADD PROPERTYSPLITADDRESS NVARCHAR(255);

UPDATE NASHVILLEHOUSING SET PROPERTYSPLITADDRESS = SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',', PROPERTYADDRESS) - 1)

ALTER TABLE NASHVILLEHOUSING ADD PROPERTYSPLITCITY NVARCHAR(255);

UPDATE NASHVILLEHOUSING SET PROPERTYSPLITCITY = SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS) + 1, LEN(PROPERTYADDRESS))

SELECT OWNERADDRESS FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

SELECT PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 3),
       PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 2),
       PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 1)
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITADDRESS NVARCHAR(255);

UPDATE NASHVILLEHOUSING SET OWNERSPLITADDRESS = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 3)


ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITCITY NVARCHAR(255);

UPDATE NASHVILLEHOUSING SET OWNERSPLITCITY = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 2)

ALTER TABLE NASHVILLEHOUSING ADD OWNERSPLITSTATE NVARCHAR(255);

UPDATE NASHVILLEHOUSING SET OWNERSPLITSTATE = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 1)

SELECT * FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

-- CHANGE Y AND N TO YES AND NO IN "SOLD AS VACANT" FIELD

SELECT DISTINCT
    (SOLDASVACANT),
    COUNT(SOLDASVACANT)
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING
GROUP BY SOLDASVACANT
ORDER BY 2

SELECT SOLDASVACANT,
       CASE
           WHEN SOLDASVACANT = 'Y' THEN
               'YES'
           WHEN SOLDASVACANT = 'N' THEN
               'NO'
           ELSE
               SOLDASVACANT
       END
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

UPDATE NASHVILLEHOUSING
SET SOLDASVACANT = CASE
                       WHEN SOLDASVACANT = 'Y' THEN
                           'YES'
                       WHEN SOLDASVACANT = 'N' THEN
                           'NO'
                       ELSE
                           SOLDASVACANT
                   END
-- REMOVE DUPLICATES

WITH ROWNUMCTE
AS (SELECT *,
           ROW_NUMBER() OVER (PARTITION BY PARCELID,
                                           PROPERTYADDRESS,
                                           SALEPRICE,
                                           SALEDATE,
                                           LEGALREFERENCE
                              ORDER BY UNIQUEID
                             ) ROW_NUM
    FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING
   --ORDER BY PARCELID
   )
SELECT *
FROM ROWNUMCTE
WHERE ROW_NUM > 1
ORDER BY PROPERTYADDRESS

SELECT *
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

-- DELETE UNUSED COLUMNS
SELECT *
FROM PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING

ALTER TABLE PORTFOLIOPROJECT.DBO.NASHVILLEHOUSING
DROP COLUMN OWNERADDRESS,
     TAXDISTRICT,
     PROPERTYADDRESS,
     SALEDATE